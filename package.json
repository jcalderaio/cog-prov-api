{
  "name": "esante-provisioning-api",
  "version": "0.1.1",
  "commit": "local",
  "description": "eSante Provisioning API",
  "author": "Cognosante",
  "license": "ISC",
  "dependencies": {
    "@cognosante/cgs-graphql-server": "^0.18.15",
    "apollo-link-context": "^1.0.8",
    "apollo-link-http": "^1.5.4",
    "apollo-server-express": "^1.3.6",
    "aws-sdk": "^2.249.1",
    "aws-serverless-express": "^3.2.0",
    "axios": "^0.18.0",
    "bluebird": "^3.5.1",
    "chai": "^4.1.2",
    "cors": "^2.8.4",
    "deepmerge": "^2.1.1",
    "easyxml": "^2.0.1",
    "express": "^4.16.3",
    "express-graphql": "^0.6.12",
    "graphql": "^0.12.3",
    "graphql-tag": "^2.9.2",
    "graphql-tools": "^2.24.0",
    "handlebars": "^4.0.11",
    "joi": "^13.3.0",
    "knex": "^0.14.6",
    "lodash": "^4.17.10",
    "mocha": "^5.2.0",
    "mock-knex": "^0.4.0",
    "moment": "^2.22.2",
    "morgan": "^1.9.0",
    "node-fetch": "^2.1.2",
    "pg": "^7.4.3",
    "promise-retry": "^1.1.1",
    "prop-types": "^15.6.1",
    "qs": "^6.5.2",
    "sequelize": "^4.37.10",
    "url-join": "^4.0.0",
    "uuid": "^3.2.1",
    "winston": "^2.4.2"
  },
  "devDependencies": {
    "axios-mock-adapter": "^1.15.0",
    "eslint": "^4.19.1",
    "eslint-config-airbnb-base": "^12.1.0",
    "eslint-plugin-import": "^2.12.0",
    "jest": "^23.1.0",
    "jest-cli": "^23.1.0",
    "nodemon": "^1.17.5"
  },
  "scripts": {
    "start": "AWS_XRAY_CONTEXT_MISSING=LOG_ERROR && nodemon --watch src ./server.js",
    "clean": "rm -rf ./dist",
    "build": "rm -rf ./dist && mkdir -p ./dist  && zip -r ./dist/lambda.zip node_modules/* src/* lambda.js server.js package.json -x .git *.DS_Store* *dist* *infrastructure* *.terraform* *jest* *istanbul* *eslint* *yargs* *nodemon*",
    "publish": "aws s3 cp ./dist/lambda.zip s3://cgs-software/esante/inform/esante-provisioning-api.zip",
    "deploy": "aws lambda update-function-code --function-name esante-provisioning-api  --zip-file fileb://dist/lambda.zip --publish",
    "lint": "eslint design ./src",
    "test": "jest"
  },
  "jest": {
    "collectCoverage": true,
    "coverageReporters": [
      "json",
      "lcov",
      "text",
      "html"
    ],
    "collectCoverageFrom": [
      "<rootDir>/src/**/*.{js,jsx}",
      "!**/node_modules/**",
      "!**/vendor/**",
      "!**/coverage/**",
      "!<rootDir>/lambda.js",
      "!<rootDir>/server.js"
    ],
    "testPathIgnorePatterns": [
      "<rootDir>/lambda.js",
      "<rootDir>/server.js"
    ]
  }
}
